name: build_apk
on:
  repository_dispatch:
    types: [JP,EN,KR]
jobs:
  build_so:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        triplet: [arm64-v8a,armeabi-v7a]
    env:
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/AzurLane/build/${{ matrix.triplet }}/vcpkg_installed,readwrite
    steps:

      - name: checkout main
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MAIN }}
          ref: main
          submodules: recursive
          path: Main
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: checkout Zygisk
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.ZYGISK }}
          ref: Ocean
          path: AzurLane
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: ccache
        id: ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.event.action }}-${{ github.job }}-${{ matrix.triplet }}
          evict-old-files: 'job'
          append-timestamp: false

      - name: Move files
        # if: steps.check_changes_1.outputs.has_changes == 'true'
        run: |
          cp -r Main/Output${{github.event.action}}/*.cpp AzurLane/app/src/main/cpp/azur/src
          cp -r Main/Output${{github.event.action}}/*.h   AzurLane/app/src/main/cpp/azur/src
          export MODULE_NAME="Ocean${{ github.event.action }}"
          echo "MODULE_NAME=Ocean${{ github.event.action }}" >> $GITHUB_ENV

      - uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17
          # cache: gradle
      - uses: lukka/get-cmake@latest

      - name: Restore vcpkg cache
        id: vcpkgcache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/AzurLane/build/${{ matrix.triplet }}/vcpkg_installed
          key: vcpkg-${{ matrix.triplet }}-${{ hashFiles('AzurLane/app/src/main/cpp/vcpkg.json') }}
          restore-keys: vcpkg-${{ matrix.triplet }}-${{ hashFiles('AzurLane/app/src/main/cpp/vcpkg.json') }}

      - uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          vcpkgJsonGlob: 'AzurLane/app/src/main/cpp/vcpkg.json'
          doNotCache: true

      - name: Prints output of run-vcpkg's action.
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "


      - name: Run CMake and run vcpkg to build packages
        uses: lukka/run-cmake@v10
        id: runcmake
        with:
          cmakeListsTxtPath: 'AzurLane/app/src/main/cpp/CMakeLists.txt'
          configurePreset: ${{ matrix.triplet }}
          buildPreset: ${{ matrix.triplet }}
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=ccache','-DCMAKE_CXX_COMPILER_LAUNCHER=ccache']"
      - name: Delete old ccache
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          CACHE_KEY="ccache-${{ github.event.action }}-${{ github.job }}-${{ matrix.triplet }}"
          gh cache list --repo ${{ github.repository }} --limit 1000 | grep "$CACHE_KEY" | awk '{print $1}' | while read -r id; do
            echo "Deleting old cache: $id"
            gh cache delete --repo ${{ github.repository }} $id
          done

      - name: Save vcpkg cache
        uses: actions/cache/save@main
        with:
          path: ${{ github.workspace }}/AzurLane/build/${{ matrix.triplet }}/vcpkg_installed
          key: vcpkg-${{ matrix.triplet }}-${{ hashFiles('AzurLane/app/src/main/cpp/vcpkg.json') }}

      - name: Commit files
        id: check_so_changed
        working-directory: Main
        run: |
          rm -f lib${{ github.event.action }}/${{ matrix.triplet }}/*
          cp ../AzurLane/build/${{ matrix.triplet }}/lib$MODULE_NAME.so  lib${{ github.event.action }}/${{ matrix.triplet }}
          set -e

          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

          if [[ -z $(git status --porcelain lib${{ github.event.action }}) ]]; then
            echo "No changes to commit"
            echo "::set-output name=changed_so::false"
            exit 0
          fi
          git add lib${{ github.event.action }}
          git commit -m "Update ${{ github.event.action }} ${{ matrix.triplet }} libraries "
          git reset --hard
          git clean -df
          git pull --rebase origin main
          if git push origin main; then
            echo "Push successful"
            echo "any_so_changed=true" >> $GITHUB_OUTPUT
            exit 0
          fi


  build_apk:
    needs: build_so
    runs-on: ubuntu-latest
    steps:
      - name: checkout lib
        uses: actions/checkout@v4
        with:
          path: Main
          repository: ${{ secrets.MAIN }}
          ref: main
          ssh-key: ${{ secrets.SSH_KEY }}
          sparse-checkout: |
            lib${{ github.event.action }}

      - name: checkout Apk
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.APK }}
          ssh-key: ${{ secrets.SSH_KEY }}
          path: AzurLaneApk
          ref: 'main'


      - name: Restore apk_build cache
        id: cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/AzurLaneApk/apk_build
          key: vcpkg-${{ github.event.action }}-apk_build
          restore-keys: vcpkg-${{ github.event.action }}-apk_build


      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v3.2.1
        with:
          packages: 'platform-tools platforms;android-34 build-tools;34.0.0'
      - name: Output build-tools path and add to PATH
        run: |
          ls -la ${ANDROID_SDK_ROOT}/build-tools/34.0.0
          echo "${ANDROID_SDK_ROOT}/build-tools/34.0.0" >> $GITHUB_PATH


      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          cache: pip

      - name: Build APK
        run: |
          cp -r ../Main/lib${{ github.event.action }}/. libs/
          python3 main.py --lang ${{ github.event.action }}
        working-directory: AzurLaneApk


      - name: Delete old cache
        env:
          GH_TOKEN: ${{ github.token }}
        if: steps.cache.outputs.cache-hit
        run: gh cache delete --repo ${{ github.repository }} vcpkg-${{ github.event.action }}-apk_build
      - name: Save apk_build cache
        uses: actions/cache/save@main
        with:
          path: ${{ github.workspace }}/AzurLaneApk/apk_build
          key: vcpkg-${{ github.event.action }}-apk_build


      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y_%m_%d')" >> $GITHUB_OUTPUT

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@main
        with:
          token: ${{ secrets.GH_PAT }}
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Clean old files
        run: |
          if [ "${{ github.event.action }}" = "KR" ]; then
            PREFIX="kr.txwy.and.blhx"
          else
            PREFIX="com.YoStar${{ github.event.action }}.AzurLane"
          fi
          rclone delete mega:/ --include "${PREFIX}*.xapk" --ignore-errors
          rclone delete mega:/ --include "${PREFIX}*.apk" --ignore-errors
      
      - name: Upload new files
        run: |
          if [ "${{ github.event.action }}" = "KR" ]; then
            SRC_NAME="kr.txwy.and.blhx"
            DEST_PREFIX="kr.txwy.and.blhx"
          else
            SRC_NAME="com.YoStar${{ github.event.action }}.AzurLane"
            DEST_PREFIX="com.YoStar${{ github.event.action }}.AzurLane"
          fi
          rclone copyto "AzurLaneApk/${SRC_NAME}.xapk" "mega:/${DEST_PREFIX}_${{steps.date.outputs.date}}.xapk"
          rclone copyto "AzurLaneApk/${SRC_NAME}.apk" "mega:/${DEST_PREFIX}_${{steps.date.outputs.date}}.apk"
            
            
      
      
      - name: Update Rclone config
        uses: AnimMouse/setup-rclone/update-config@main
        with:
            rclone_config_secret_name: RCLONE_CONFIG
            token: ${{ secrets.GH_PAT }}        


      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          name: ${{ steps.date.outputs.date }}_${{ github.event.action }}
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: AzurLaneApk/*.xapk,AzurLaneApk/*.apk
          draft: true
          #           commit: "latest"
          makeLatest: false
          tag: "test${{ github.event.action }}"
          omitBody: true
