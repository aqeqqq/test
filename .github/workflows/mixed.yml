name: Multi-Region Build
on:
  push:
  workflow_dispatch:
    inputs:
      force_build_so:
        description: 'Force build so without changes'
        type: string
        default: "true"

jobs:
  pre_check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.check.outputs.should_skip }}
      skip_translate: ${{ steps.check.outputs.skip_translate }}
    steps:
      - id: check
        run: |
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            echo "skip_translate=false" >> $GITHUB_OUTPUT
          else
            echo "skip_translate=${{ github.event.inputs.force_build_so }}" >> $GITHUB_OUTPUT
          fi
          echo "should_skip=false" >> $GITHUB_OUTPUT

  update_h:
    needs: pre_check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [EN, JP]
    outputs:
      any_translate_changed: ${{ steps.check_changes.outputs.any_translate_changed }}
    steps:
      - uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Singapore"
          
      - name: Checkout main (${{ matrix.region }})
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MAIN }}
          ref: ${{ matrix.region }}
          ssh-key: ${{ secrets.SSH_KEY }}
          path: Main
          sparse-checkout: |
            Output
            python

      - name: Checkout AzurLaneLuaScripts
        uses: actions/checkout@v4
        with:
          repository: AzurLaneTools/AzurLaneLuaScripts
          path: AzurLaneLuaScripts
          ref: main
          sparse-checkout: |
            CN/gamecfg/story/
            CN/sharecfg/
            CN/sharecfg/ship_skin_template_sublist/
            CN/sharecfg/enemy_data_statistics_sublist/
            CN/sharecfgdata/
            ${{ matrix.region }}/gamecfg/story${{ matrix.region != 'EN' && 'jp' || '' }}/
            ${{ matrix.region }}/sharecfg/
            ${{ matrix.region }}/sharecfgdata/

      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.10'
          
      - name: Install dependencies and generate files
        run: |
          rm -f ../Output/*
          pip install lupa
          python3 tranlator.py
          python3 story.py
          python3 namecode.py
        working-directory: Main/python
        env:
          REGION: ${{ matrix.region }}

      - name: Commit translation changes
        id: check_changes
        working-directory: Main
        run: |
          if ${{ needs.pre_check.outputs.skip_translate == 'true' }}; then
            echo "any_translate_changed=true" >> $GITHUB_OUTPUT
          else
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git config user.name "github-actions[bot]"
            if [[ $(git status --porcelain Output) ]]; then
              git add Output
              git commit -m "Update translation files for ${{ matrix.region }}"
              git push
              echo "any_translate_changed=true" >> $GITHUB_OUTPUT
            else
              echo "any_translate_changed=false" >> $GITHUB_OUTPUT
            fi
            sleep 10
          fi

  build_so:
    runs-on: ubuntu-latest
    needs: update_h
    strategy:
      matrix:
        region: [EN, JP]
        arch: [arm64-v8a, armeabi-v7a]
        include:
          - region: EN
            module: OceanEN
          - region: JP
            module: OceanJP
    env:
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/AzurLane/build/${{ matrix.arch }}/vcpkg_installed,readwrite
      MODULE_NAME: ${{ matrix.module }}
    steps:
      - name: Checkout main (${{ matrix.region }})
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MAIN }}
          ref: ${{ matrix.region }}
          submodules: recursive
          path: Main
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Checkout Zygisk
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.ZYGISK }}
          ref: Ocean
          path: AzurLane
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ matrix.region }}-${{ matrix.arch }}-${{ hashFiles('AzurLane/app/src/main/cpp/CMakeLists.txt') }}

      - name: Move generated files
        run: |
          cp -r Main/Output/*.cpp AzurLane/app/src/main/cpp/azur/src
          cp -r Main/Output/*.h   AzurLane/app/src/main/cpp/azur/src
          echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_ENV

      - uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 17

      - uses: lukka/get-cmake@latest

      - name: Restore vcpkg cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}/AzurLane/build/${{ matrix.arch }}/vcpkg_installed
          key: vcpkg-${{ matrix.region }}-${{ matrix.arch }}-${{ hashFiles('AzurLane/app/src/main/cpp/vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ matrix.region }}-${{ matrix.arch }}-

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'AzurLane/app/src/main/cpp/vcpkg.json'
          doNotUpdateVcpkg: true

      - name: Build with CMake
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: 'AzurLane/app/src/main/cpp/CMakeLists.txt'
          configurePreset: ${{ matrix.arch }}
          buildPreset: ${{ matrix.arch }}
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=ccache','-DCMAKE_CXX_COMPILER_LAUNCHER=ccache']"


      - name: Save vcpkg cache
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/AzurLane/build/${{ matrix.arch }}/vcpkg_installed
          key: vcpkg-${{ matrix.region }}-${{ matrix.arch }}-${{ hashFiles('AzurLane/app/src/main/cpp/vcpkg.json') }}

      - name: Commit built libraries
        working-directory: Main
        run: |
          rm -f lib/${{ matrix.arch }}/*
          cp ../AzurLane/build/${{ matrix.arch }}/lib$MODULE_NAME.so lib/${{ matrix.arch }}/
          
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          
          if [[ $(git status --porcelain lib) ]]; then
            git add lib
            git commit -m "Update ${{ matrix.arch }} libraries for ${{ matrix.region }}"
            git pull --rebase origin ${{ matrix.region }}
            git push origin ${{ matrix.region }}
          fi

  build_apk:
    runs-on: ubuntu-latest
    needs: build_so
    strategy:
      matrix:
        region: [EN, JP]
    steps:
      - name: Wait for sync
        run: sleep 20

      - name: Checkout libraries
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MAIN }}
          ref: ${{ matrix.region }}
          path: Main
          ssh-key: ${{ secrets.SSH_KEY }}
          sparse-checkout: lib

      - name: Checkout APK builder
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.APK }}
          ssh-key: ${{ secrets.SSH_KEY }}
          path: AzurLaneApk
          ref: ${{ matrix.region }}

      - name: Prepare APK
        run: |
          cp -r ../Main/lib/. libs/
          chmod +x patch_perseus.sh
          ./patch_perseus.sh
        working-directory: AzurLaneApk

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.1
        with:
          packages: 'platform-tools platforms;android-34 build-tools;34.0.0'

      - name: Zipalign and sign
        run: |
          chmod +x zipalign_sign.sh
          ./zipalign_sign.sh
        working-directory: AzurLaneApk

      - name: Create release
        uses: ncipollo/release-action@v1.12.0
        with:
          name: "${{ steps.get_date.outputs.date }}_${{ matrix.region }}"
          tag: "release-${{ matrix.region }}"
          artifacts: |
            AzurLaneApk/build/com.YoStar${{ matrix.region }}.AzurLane.xapk,
            AzurLaneApk/build/com.YoStar${{ matrix.region }}.AzurLane.patched.apk
          draft: true
          makeLatest: false